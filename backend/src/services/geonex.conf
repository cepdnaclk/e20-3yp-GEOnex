# Redirect HTTP to HTTPS
server {
    listen 80;
    server_name api.geonex.site;

    return 301 https://$host$request_uri;
}

# HTTPS server block
server {
    listen 443 ssl http2;
    server_name api.geonex.site;

    ssl_certificate /etc/letsencrypt/live/api.geonex.site/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/api.geonex.site/privkey.pem;

    # Enhanced SSL Security
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;

    # Security Headers
    add_header X-Frame-Options DENY;
    add_header X-Content-Type-Options nosniff;
    add_header X-XSS-Protection "1; mode=block";
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin";

    # Common proxy settings
    proxy_http_version 1.1;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_buffering off;
    proxy_request_buffering off;


    

    # ===== Auth service =====
    location /api/auth/ {
        proxy_pass http://auth-service:5002/api/auth/;
    }

    # ===== User service =====
    location /api/user/ {
        proxy_pass http://auth-service:5002/api/user/;
    }

    # ===== Device service =====
    location /api/devices/ {
        proxy_pass http://device-service:5003/api/devices/;
    }

    # ===== Project service =====
    location /api/projects/ {
        proxy_pass http://project-service:5004/api/projects/;
    }

    # ===== Point service =====
    location /api/points/ {
        proxy_pass http://point-service:5005/api/points/;
    }

    # ===== MQTT service =====
    location /api/mqtt/ {
        proxy_pass http://mqtt-service:5007/api/mqtt/;
    }

    # ===== Notification service =====
    location /api/notifications/ {
        proxy_pass http://notification-service:5008/api/notifications/;
    }

    # ===== Export service =====
    location /api/export/ {
        proxy_pass http://export-service:5006/api/export/;
    }


    # Health check endpoint
    location /health {
        access_log off;
        return 200 "healthy\n";
        add_header Content-Type text/plain;
    }


    location / {
        proxy_pass http://mqtt-service:5007;  
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "Upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Origin $http_origin;
        proxy_cache_bypass $http_upgrade;
    }
}
